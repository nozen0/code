package tuan08_QuanLyPhongHoc;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;

// Lớp DanhSachPhonghoc quản lý danh sách các phòng học
public class DanhSachPhonghoc {
    List<Phonghoc> ls; // Danh sách các phòng học

    // Constructor khởi tạo danh sách phòng học với kích thước ban đầu
    public DanhSachPhonghoc(int n) {
        ls = new ArrayList<Phonghoc>(n);
    }

    // Thêm phòng học vào danh sách, kiểm tra trùng mã phòng
    public void addPhonghoc(Phonghoc p) throws Exception {
        if (ls.contains(p)) {
            throw new Exception("Trung ma phong");
        } else {
            ls.add(p);
        }
    }

    // Tìm kiếm phòng học theo mã phòng
    public Phonghoc findPhonghoc(String maPhong) {
        for (Phonghoc phonghoc : ls) {
            if (phonghoc.getMaPhong().equals(maPhong)) {
                return phonghoc;
            }
        }
        return null;
    }

    // Lấy danh sách các phòng học đạt chuẩn
    public List<Phonghoc> getPhongDatChuan() {
        List<Phonghoc> listDatChuan = new ArrayList<>();
        for (Phonghoc phonghoc : ls) {
            if (phonghoc.checkDatChuan()) {
                listDatChuan.add(phonghoc);
            }
        }
        return listDatChuan;
    }

    // Sắp xếp danh sách phòng học theo dãy nhà
    public void sortByDayNha() {
        Collections.sort(ls, Comparator.comparing(Phonghoc::getDayNha));
    }

    // Sắp xếp danh sách phòng học theo diện tích giảm dần
    public void sortByDienTich() {
        ls.sort((o1, o2) -> Double.compare(o2.getDienTich(), o1.getDienTich()));
    }

    // Sắp xếp danh sách phòng học theo số bóng đèn tăng dần
    public void sortBySoBongDen() {
        ls.sort(Comparator.comparingInt(Phonghoc::getSoBongDen));
    }

    // Cập nhật số máy tính cho phòng máy tính theo mã phòng
    public void updatePhongMayTinh(String maPhong, int soMayTinh) throws Exception {
        PhongMayTinh ph = (PhongMayTinh) findPhonghoc(maPhong);
        if (ph != null) {
            ph.setSoMayTinh(soMayTinh);
        } else {
            throw new Exception("Khong tim thay phong hoc");
        }
    }

    // Xóa phòng học khỏi danh sách theo mã phòng
    public void xoaPhonghoc(String maPhonghoc) throws Exception {
        Phonghoc ph = findPhonghoc(maPhonghoc);
        if (ph != null) {
            ls.remove(ph);
        } else {
            throw new Exception("Khong tim thay phong hoc");
        }
    }

    // Trả về số lượng phòng học trong danh sách
    public int getSoPhonghoc() {
        return ls.size();
    }

    // Lấy danh sách các phòng máy tính có số máy tính bằng 60
    public List<PhongMayTinh> getPhongMT() {
        List<PhongMayTinh> listPMT = new ArrayList<>();
        for (Phonghoc phonghoc : ls) {
            if (phonghoc instanceof PhongMayTinh) {
                PhongMayTinh pmt = (PhongMayTinh) phonghoc;
                if (pmt.getSoMayTinh() == 60) {
                    listPMT.add(pmt);
                }
            }
        }
        return listPMT;
    }

    // Hiển thị danh sách phòng học
    @Override
    public String toString() {
        StringBuilder s = new StringBuilder();
        s.append(String.format("%-15s|%-15s|%-15s|%-15s|%-15s|%-15s|%-15s|%-15s|%-15s\n", "Ma phong", "Day nha",
                "Dien tich", "So bong", "May chieu", "So may tinh", "Chuyen nganh", "Suc chua", "Bon rua"));
        for (Phonghoc phonghoc : ls) {
            s.append(phonghoc.toString()).append("\n");
        }
        return s.toString();
    }
}
